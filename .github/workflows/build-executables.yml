name: Build Multi-Format Helper

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies and pkg
      run: |
        npm install
        npm install -g pkg@5.8.1

    - name: Build all platforms
      run: |
        mkdir -p dist
        # Build all platforms
        pkg server.js --targets node18-linux-x64 --output dist/printer-helper-linux
        pkg server.js --targets node18-win-x64 --output dist/printer-helper-win.exe
        pkg server.js --targets node18-macos-x64 --output dist/printer-helper-macos

        # Set permissions for Unix
        chmod +x dist/printer-helper-linux
        chmod +x dist/printer-helper-macos

    - name: Create macOS extras
      run: |
        cd dist

        # Create .app bundle structure
        mkdir -p "PrinterHelper.app/Contents/MacOS"
        cp printer-helper-macos "PrinterHelper.app/Contents/MacOS/printer-helper"
        chmod +x "PrinterHelper.app/Contents/MacOS/printer-helper"

        # Create Info.plist
        cat > "PrinterHelper.app/Contents/Info.plist" << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>printer-helper</string>
            <key>CFBundleIdentifier</key>
            <string>com.cottagetandoori.printerhelper</string>
            <key>CFBundleName</key>
            <string>Printer Helper</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
        </dict>
        </plist>
        EOF

        # Create .command script
        cat > printer-helper.command << 'SCRIPT'
        #!/bin/bash
        echo "🖨️ Starting Cottage Tandoori Printer Helper..."
        echo "📍 Server will run on http://localhost:3001"
        DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
        "$DIR/printer-helper-macos"
        echo ""
        echo "Press Enter to close..."
        read
        SCRIPT
        chmod +x printer-helper.command

        # ZIP the .app bundle
        zip -r printer-helper-macos-app.zip "PrinterHelper.app"

        # List what we created
        echo "📦 Created files:"
        ls -la

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Generate version tag
        VERSION="v1.0.${{ github.run_number }}"
        echo "Creating release: $VERSION"

        # Create release using GitHub CLI (simpler than API)
        gh release create "$VERSION" \
          --title "Multi-Format Printer Helper $VERSION" \
          --notes "## 🎯 Multi-Format Printer Helper

        **macOS Users (choose one):**
        - \`printer-helper-macos-app.zip\` - Native .app bundle (recommended)
        - \`printer-helper.command\` - Double-click Terminal script 
        - \`printer-helper-macos\` - Traditional binary

        **Other Platforms:**
        - \`printer-helper-win.exe\` - Windows executable
        - \`printer-helper-linux\` - Linux binary

        All files are ready to run with double-click!" \
          dist/printer-helper-linux \
          dist/printer-helper-win.exe \
          dist/printer-helper-macos \
          dist/printer-helper.command \
          dist/printer-helper-macos-app.zip

        echo "✅ Release created successfully!"
