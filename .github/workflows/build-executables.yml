name: Build Executables

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: node18-linux-x64
            output: printer-helper-linux
          - os: windows-latest
            target: node18-win-x64
            output: printer-helper-win.exe
          - os: macos-13
            target: node18-macos-x64
            output: printer-helper-macos

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '18'

    - run: npm install

    - run: npm install -g pkg@5.8.1

    - run: |
        mkdir -p dist
        pkg server.js --targets ${{ matrix.target }} --output dist/${{ matrix.output }}

    - name: Set permissions (Unix)
      if: matrix.os != 'windows-latest'
      run: chmod +x dist/${{ matrix.output }}

    - name: Create macOS extras (macOS only)
      if: matrix.os == 'macos-13'
      run: |
        # Create .app bundle
        mkdir -p "PrinterHelper.app/Contents/MacOS"
        cp dist/${{ matrix.output }} "PrinterHelper.app/Contents/MacOS/printer-helper"
        chmod +x "PrinterHelper.app/Contents/MacOS/printer-helper"

        cat > "PrinterHelper.app/Contents/Info.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>printer-helper</string>
            <key>CFBundleIdentifier</key>
            <string>com.cottagetandoori.printerhelper</string>
            <key>CFBundleName</key>
            <string>Printer Helper</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
        </dict>
        </plist>
        EOF

        # Create .command script
        cat > dist/printer-helper.command << 'SCRIPT'
        #!/bin/bash
        echo "Starting Printer Helper..."
        DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
        "$DIR/${{ matrix.output }}"
        echo "Press Enter to close..."
        read
        SCRIPT
        chmod +x dist/printer-helper.command

        # ZIP the .app
        zip -r dist/printer-helper-macos-app.zip "PrinterHelper.app"

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-builds
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/download-artifact@v4

    - uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: "Printer Helper v1.0.${{ github.run_number }}"
        files: |
          ubuntu-latest-builds/printer-helper-linux
          windows-latest-builds/printer-helper-win.exe
          macos-13-builds/printer-helper-macos
          macos-13-builds/printer-helper.command
          macos-13-builds/printer-helper-macos-app.zip
        body: |
          ## Multi-Format Printer Helper

          **macOS:**
          - printer-helper-macos-app.zip (Native .app)
          - printer-helper.command (Terminal script)
          - printer-helper-macos (Binary)

          **Other:**
          - printer-helper-win.exe (Windows)
          - printer-helper-linux (Linux)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
