name: Build PKG Executables v8.0.0

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-pkg:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install
        npm install -g pkg@5.8.1
        
    - name: Build PKG executables
      run: |
        mkdir -p dist
        
        echo "Building PKG executables with embedded Node.js runtime..."
        
        # Build for all platforms
        pkg package.json --targets node18-win-x64 --output dist/cottage-tandoori-helper-windows.exe
        pkg package.json --targets node18-macos-x64 --output dist/cottage-tandoori-helper-mac  
        pkg package.json --targets node18-linux-x64 --output dist/cottage-tandoori-helper-linux
        
        # Make executables executable
        chmod +x dist/cottage-tandoori-helper-mac
        chmod +x dist/cottage-tandoori-helper-linux
        
        # Show file sizes (should be 30-50MB each)
        echo "
Generated executables:"
        ls -lh dist/
        
        # Verify they're proper size
        for file in dist/*; do
          size=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file")
          size_mb=$((size / 1024 / 1024))
          echo "$file: ${size_mb}MB"
          if [ $size_mb -lt 25 ]; then
            echo "ERROR: $file is too small (${size_mb}MB), should be 30-50MB"
            exit 1
          fi
        done
        
    - name: Create release v8.0.0
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v8.0.0-pkg-runtime
        release_name: "Production PKG Executables v8.0.0 - Embedded Runtime"
        body: |
          üöÄ **Production-Ready PKG Executables with Embedded Node.js Runtime**
          
          ‚úÖ **What's New in v8.0.0:**
          - üî• **Embedded Node.js Runtime** - No Node.js installation required
          - üì¶ **True Self-Contained** - Each executable is 30-50MB with everything included
          - üñ®Ô∏è  **Restaurant-Ready** - Optimized for production restaurant environments
          - ‚ö° **Instant Start** - Double-click and runs immediately on localhost:3001
          - üõ°Ô∏è  **Error Handling** - Robust error handling and logging
          
          **Downloads (30-50MB each):**
          - **Windows**: cottage-tandoori-helper-windows.exe
          - **Mac**: cottage-tandoori-helper-mac
          - **Linux**: cottage-tandoori-helper-linux
          
          **Perfect for Restaurant Operations:**
          1. Download appropriate file for your platform
          2. Double-click to run (that's it!)
          3. Helper serves QSAI on http://localhost:3001
          4. Test from main restaurant app
          
          **No Dependencies Required!** These are true standalone executables with embedded Node.js runtime.
        draft: false
        prerelease: false
        
    - name: Upload Windows executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cottage-tandoori-helper-windows.exe
        asset_name: cottage-tandoori-helper-windows.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Mac executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cottage-tandoori-helper-mac
        asset_name: cottage-tandoori-helper-mac
        asset_content_type: application/octet-stream
        
    - name: Upload Linux executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cottage-tandoori-helper-linux
        asset_name: cottage-tandoori-helper-linux
        asset_content_type: application/octet-stream
